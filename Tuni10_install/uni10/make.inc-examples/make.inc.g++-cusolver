# GPU_TARGET contains one or more of Fermi, Kepler, or Maxwell,
# to specify for which GPUs you want to compile MAGMA:
#     Fermi   - NVIDIA compute capability 2.x cards
#     Kepler  - NVIDIA compute capability 3.x cards
#     Maxwell - NVIDIA compute capability 5.x cards
# The default is "Fermi Kepler".
# Note that NVIDIA no longer supports 1.x cards, as of CUDA 6.5.
# See http://developer.nvidia.com/cuda-gpus
#
#GPU_TARGET ?= Fermi Kepler

# 
# --------------------
# version name of uni10

## Name of the linear algebra solvers package.
LNPACKAGE   = cusolver
## Computational architecture.
CALARCH     = gpu

# --------------------
#
# --------------------
# programs

CC        = gcc
CXX       = g++

ARCH      = ar
ARCHFLAGS = cr
RANLIB    = ranlib


# --------------------
#
# --------------------
# flags

# UNI10 MACRO FLAGS

UNI10CXXFLAGS = -DUNI_GPU -DUNI_CUSOLVER

# Use -fPIC to make shared (.so) and static (.a) library;
# can be commented out if making only static library.
##
## Our ATLAS installation has only static libraries, and one can't
## build a shared library against a static library, so disable FPIC.

FPIC      = -fPIC

CFLAGS       = -O3 $(FPIC) -DADD_ -fopenmp #-Wall -Wshadow
NVCCFLAGS    = -O3         -DADD_       -Xcompiler "$(FPIC) -Wall -Wno-unused-function"
LDFLAGS      =     $(FPIC)       -fopenmp
STATICFLAGS  = -Wl, -static-intel, -staticlib, --whole-archive 

# USE BOOST random generators or not.
#
# CFLAGS    += -DBOOST
#

# C++11 (gcc >= 4.7) is not required, but has benefits like atomic operations

CXXFLAGS := $(UNI10CXXFLAGS) $(CFLAGS) -pthread -fPIC -fpermissive -std=c++11
CFLAGS   += -std=c99

# --------------------
#
# --------------------
# Librarys links

LDLIBRARIES := stdc++

# USE BOOST random generators or not.
#
# LDLIBRARIES    += boost_system boost_filesystem boost_thread
#
# MKL links

LDLIBRARIES += blas lapack cudart cublas cusolver gomp pthread m dl

# BLAS/LAPACK include

BLAS_INCLUDE :=
BLAS_LIB     :=

# CUDA include
CUDA_INCLUDE := $(CUDADIR)/include
CUDA_LIB     := $(CUDADIR)/lib64

# --------------------
#
# --------------------
# customized settings

UNI10_INSTALL_PREFIX := ~/myLib/uni10_gpu

# --------------------
#
# --------------------
# google test

GTEST := 0

# Uncomment for debugging. Does not work on OSX due to https://github.com/BVLC/caffe/issues/171
# DEBUG := 1

# --------------------

Q ?= @
